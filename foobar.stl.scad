qr_size=21;module qrcode() {
    translate([-10, 10, 0])cube([1, 1, 1]);
    translate([-9, 10, 0])cube([1, 1, 1]);
    translate([-8, 10, 0])cube([1, 1, 1]);
    translate([-7, 10, 0])cube([1, 1, 1]);
    translate([-6, 10, 0])cube([1, 1, 1]);
    translate([-5, 10, 0])cube([1, 1, 1]);
    translate([-4, 10, 0])cube([1, 1, 1]);
    translate([-2, 10, 0])cube([1, 1, 1]);
    translate([-5, -1, 0])cube([1, 1, 1]);
    translate([-2, -1, 0])cube([1, 1, 1]);
    translate([-1, -1, 0])cube([1, 1, 1]);
    translate([0, -1, 0])cube([1, 1, 1]);
    translate([1, -1, 0])cube([1, 1, 1]);
    translate([2, -1, 0])cube([1, 1, 1]);
    translate([6, -1, 0])cube([1, 1, 1]);
    translate([9, -1, 0])cube([1, 1, 1]);
    translate([-9, -2, 0])cube([1, 1, 1]);
    translate([-7, -2, 0])cube([1, 1, 1]);
    translate([-6, -2, 0])cube([1, 1, 1]);
    translate([-5, -2, 0])cube([1, 1, 1]);
    translate([-4, -2, 0])cube([1, 1, 1]);
    translate([-1, -2, 0])cube([1, 1, 1]);
    translate([1, -2, 0])cube([1, 1, 1]);
    translate([5, -2, 0])cube([1, 1, 1]);
    translate([7, -2, 0])cube([1, 1, 1]);
    translate([-2, -3, 0])cube([1, 1, 1]);
    translate([-1, -3, 0])cube([1, 1, 1]);
    translate([0, -3, 0])cube([1, 1, 1]);
    translate([1, -3, 0])cube([1, 1, 1]);
    translate([2, -3, 0])cube([1, 1, 1]);
    translate([3, -3, 0])cube([1, 1, 1]);
    translate([4, -3, 0])cube([1, 1, 1]);
    translate([6, -3, 0])cube([1, 1, 1]);
    translate([8, -3, 0])cube([1, 1, 1]);
    translate([9, -3, 0])cube([1, 1, 1]);
    translate([-10, -4, 0])cube([1, 1, 1]);
    translate([-9, -4, 0])cube([1, 1, 1]);
    translate([-8, -4, 0])cube([1, 1, 1]);
    translate([-7, -4, 0])cube([1, 1, 1]);
    translate([-6, -4, 0])cube([1, 1, 1]);
    translate([-5, -4, 0])cube([1, 1, 1]);
    translate([-4, -4, 0])cube([1, 1, 1]);
    translate([-1, -4, 0])cube([1, 1, 1]);
    translate([0, -4, 0])cube([1, 1, 1]);
    translate([1, -4, 0])cube([1, 1, 1]);
    translate([3, -4, 0])cube([1, 1, 1]);
    translate([6, -4, 0])cube([1, 1, 1]);
    translate([8, -4, 0])cube([1, 1, 1]);
    translate([-10, -5, 0])cube([1, 1, 1]);
    translate([-4, -5, 0])cube([1, 1, 1]);
    translate([-2, -5, 0])cube([1, 1, 1]);
    translate([-1, -5, 0])cube([1, 1, 1]);
    translate([5, -5, 0])cube([1, 1, 1]);
    translate([6, -5, 0])cube([1, 1, 1]);
    translate([10, -5, 0])cube([1, 1, 1]);
    translate([-10, -6, 0])cube([1, 1, 1]);
    translate([-8, -6, 0])cube([1, 1, 1]);
    translate([-7, -6, 0])cube([1, 1, 1]);
    translate([-6, -6, 0])cube([1, 1, 1]);
    translate([-4, -6, 0])cube([1, 1, 1]);
    translate([-2, -6, 0])cube([1, 1, 1]);
    translate([2, -6, 0])cube([1, 1, 1]);
    translate([5, -6, 0])cube([1, 1, 1]);
    translate([6, -6, 0])cube([1, 1, 1]);
    translate([9, -6, 0])cube([1, 1, 1]);
    translate([-10, -7, 0])cube([1, 1, 1]);
    translate([-8, -7, 0])cube([1, 1, 1]);
    translate([-7, -7, 0])cube([1, 1, 1]);
    translate([-6, -7, 0])cube([1, 1, 1]);
    translate([-4, -7, 0])cube([1, 1, 1]);
    translate([-1, -7, 0])cube([1, 1, 1]);
    translate([0, -7, 0])cube([1, 1, 1]);
    translate([2, -7, 0])cube([1, 1, 1]);
    translate([3, -7, 0])cube([1, 1, 1]);
    translate([4, -7, 0])cube([1, 1, 1]);
    translate([6, -7, 0])cube([1, 1, 1]);
    translate([8, -7, 0])cube([1, 1, 1]);
    translate([9, -7, 0])cube([1, 1, 1]);
    translate([10, -7, 0])cube([1, 1, 1]);
    translate([-10, -8, 0])cube([1, 1, 1]);
    translate([-8, -8, 0])cube([1, 1, 1]);
    translate([-7, -8, 0])cube([1, 1, 1]);
    translate([-6, -8, 0])cube([1, 1, 1]);
    translate([-4, -8, 0])cube([1, 1, 1]);
    translate([-1, -8, 0])cube([1, 1, 1]);
    translate([2, -8, 0])cube([1, 1, 1]);
    translate([6, -8, 0])cube([1, 1, 1]);
    translate([8, -8, 0])cube([1, 1, 1]);
    translate([-10, -9, 0])cube([1, 1, 1]);
    translate([-4, -9, 0])cube([1, 1, 1]);
    translate([-2, -9, 0])cube([1, 1, 1]);
    translate([-1, -9, 0])cube([1, 1, 1]);
    translate([0, -9, 0])cube([1, 1, 1]);
    translate([1, -9, 0])cube([1, 1, 1]);
    translate([2, -9, 0])cube([1, 1, 1]);
    translate([6, -9, 0])cube([1, 1, 1]);
    translate([-10, -10, 0])cube([1, 1, 1]);
    translate([-9, -10, 0])cube([1, 1, 1]);
    translate([-8, -10, 0])cube([1, 1, 1]);
    translate([-7, -10, 0])cube([1, 1, 1]);
    translate([-6, -10, 0])cube([1, 1, 1]);
    translate([-5, -10, 0])cube([1, 1, 1]);
    translate([-4, -10, 0])cube([1, 1, 1]);
    translate([-2, -10, 0])cube([1, 1, 1]);
    translate([1, -10, 0])cube([1, 1, 1]);
    translate([3, -10, 0])cube([1, 1, 1]);
    translate([4, -10, 0])cube([1, 1, 1]);
    translate([10, -10, 0])cube([1, 1, 1]);
}
scale([10,10,10]){ union(){ qrcode(); translate([-10, -10, -1]) cube([qr_size,qr_size,1]); }}
